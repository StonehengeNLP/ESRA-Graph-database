from . import models

ER = {'BaseEntity': {},
      'Generic': {
          'Generic': ['related_to', 'compare', 'used_for', 'hyponym_of', 'conjunction', 'evaluate_for', 'part_of', 'feature_of'],
          'Material': ['related_to', 'compare', 'used_for', 'conjunction', 'part_of'],
          'Method': ['related_to', 'compare', 'used_for', 'hyponym_of', 'conjunction', 'evaluate_for', 'part_of'],
          'Metric': ['related_to', 'compare', 'used_for', 'evaluate_for'],
          'OtherScientificTerm': ['related_to', 'compare', 'used_for', 'hyponym_of', 'conjunction', 'evaluate_for', 'part_of', 'feature_of'],
          'Task': ['related_to', 'compare', 'used_for', 'hyponym_of', 'evaluate_for', 'part_of', 'feature_of'],
          'Abbreviation': ['related_to'],
          'Paper': ['appear_in'],
          'Author': [],
          'Affiliation': []},
      'Material': {
          'Generic': ['related_to', 'hyponym_of', 'feature_of', 'used_for', 'conjunction', 'part_of', 'evaluate_for'],
          'Material': ['related_to', 'hyponym_of', 'feature_of', 'used_for', 'conjunction', 'part_of', 'compare'],
          'Method': ['related_to', 'feature_of', 'used_for', 'conjunction', 'evaluate_for'],
          'Metric': ['related_to', 'used_for', 'evaluate_for'],
          'OtherScientificTerm': ['related_to', 'hyponym_of', 'feature_of', 'used_for', 'conjunction', 'part_of', 'evaluate_for', 'compare'],
          'Task': ['related_to', 'hyponym_of', 'feature_of', 'used_for', 'part_of', 'evaluate_for', 'compare'],
          'Abbreviation': [],
          'Paper': ['appear_in'],
          'Author': [],
          'Affiliation': []},
      'Method': {
          'Generic': ['related_to', 'used_for', 'conjunction', 'part_of', 'evaluate_for', 'hyponym_of', 'compare', 'feature_of'],
          'Material': ['related_to', 'used_for'],
          'Method': ['related_to', 'used_for', 'conjunction', 'part_of', 'evaluate_for', 'hyponym_of', 'compare', 'feature_of'],
          'Metric': ['related_to', 'used_for', 'evaluate_for'],
          'OtherScientificTerm': ['related_to', 'used_for', 'conjunction', 'part_of', 'evaluate_for', 'hyponym_of', 'compare', 'feature_of'],
          'Task': ['related_to', 'used_for', 'conjunction', 'part_of', 'hyponym_of', 'feature_of'],
          'Abbreviation': [],
          'Paper': ['appear_in'],
          'Author': [],
          'Affiliation': []},
      'Metric': {
          'Generic': ['related_to', 'evaluate_for', 'conjunction', 'hyponym_of', 'feature_of', 'used_for', 'compare', 'part_of'],
          'Material': ['related_to', 'evaluate_for', 'conjunction', 'feature_of', 'used_for'],
          'Method': ['related_to', 'evaluate_for', 'conjunction', 'hyponym_of', 'feature_of', 'used_for'],
          'Metric': ['related_to', 'evaluate_for', 'conjunction', 'hyponym_of', 'feature_of', 'used_for', 'compare'],
          'OtherScientificTerm': ['related_to', 'evaluate_for', 'conjunction', 'hyponym_of', 'feature_of', 'used_for', 'compare'],
          'Task': ['related_to', 'evaluate_for', 'feature_of', 'used_for'],
          'Abbreviation': [],
          'Paper': ['appear_in'],
          'Author': [],
          'Affiliation': []},
      'OtherScientificTerm': {
          'Generic': ['related_to', 'conjunction', 'feature_of', 'used_for', 'part_of', 'hyponym_of', 'compare', 'evaluate_for'],
          'Material': ['related_to', 'conjunction', 'feature_of', 'used_for', 'part_of', 'hyponym_of', 'compare', 'evaluate_for'],
          'Method': ['related_to', 'conjunction', 'feature_of', 'used_for', 'part_of', 'hyponym_of', 'evaluate_for'],
          'Metric': ['related_to', 'conjunction', 'feature_of', 'used_for', 'part_of'],
          'OtherScientificTerm': ['related_to', 'conjunction', 'feature_of', 'used_for', 'part_of', 'hyponym_of', 'compare'],
          'Task': ['related_to', 'conjunction', 'feature_of', 'used_for', 'part_of', 'hyponym_of', 'evaluate_for'],
          'Abbreviation': [],
          'Paper': ['appear_in'],
          'Author': [],
          'Affiliation': []},
      'Task': {
          'Generic': ['related_to', 'part_of', 'used_for', 'hyponym_of', 'evaluate_for', 'feature_of'],
          'Material': ['related_to', 'used_for', 'feature_of'],
          'Method': ['related_to', 'conjunction', 'part_of', 'used_for', 'evaluate_for', 'feature_of'],
          'Metric': ['related_to', 'used_for', 'evaluate_for'],
          'OtherScientificTerm': ['related_to', 'conjunction', 'used_for', 'evaluate_for', 'feature_of'],
          'Task': ['related_to', 'conjunction', 'part_of', 'used_for', 'hyponym_of', 'evaluate_for', 'feature_of', 'compare'],
          'Abbreviation': [],
          'Paper': ['appear_in'],
          'Author': [],
          'Affiliation': []},
      'Abbreviation': {
          'Generic': ['related_to', 'refer_to'],
          'Material': ['related_to', 'refer_to'],
          'Method': ['related_to', 'refer_to'],
          'Metric': ['related_to', 'refer_to'],
          'OtherScientificTerm': ['related_to', 'refer_to'],
          'Task': ['related_to', 'refer_to'],
          'Abbreviation': [],
          'Paper': ['appear_in'],
          'Author': [],
          'Affiliation': []},
      'Paper': {
          'Generic': [],
          'Material': [],
          'Method': [],
          'Metric': [],
          'OtherScientificTerm': [],
          'Task': [],
          'Abbreviation': [],
          'Paper': ['cite'],
          'Author': [],
          'Affiliation': []},
      'Author': {
          'Generic': [],
          'Material': [],
          'Method': [],
          'Metric': [],
          'OtherScientificTerm': [],
          'Task': [],
          'Abbreviation': [],
          'Paper': ['author_of'],
          'Author': [],
          'Affiliation': ['affiliate_with']},
      'Affiliation': {
          'Generic': [],
          'Material': [],
          'Method': [],
          'Metric': [],
          'OtherScientificTerm': [],
          'Task': [],
          'Abbreviation': [],
          'Paper': [],
          'Author': [],
          'Affiliation': []},
      }

def validate_relation(relation_type:models.BaseEntity, head_entity:models.BaseEntity, tail_entity):
    head = head_entity.__class__.__name__
    tail = tail_entity.__class__.__name__
    if head not in ER:
        raise TypeError(f'Head entity type is not valid: {head}')
    if tail not in ER[head]:
        raise TypeError(f'Tail entity type is not valid: {tail}')
    if relation_type not in ER[head][tail]:
        raise TypeError(f'Relation is not valid: {head}-{relation_type}-{tail}')